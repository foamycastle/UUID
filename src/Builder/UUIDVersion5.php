<?php

namespace Foamycastle\UUID\Builder;

use Foamycastle\UUID\Field\FieldKey;
use Foamycastle\UUID\Provider\ProviderKey;
use Foamycastle\UUID\UUIDBuilder;

class UUIDVersion5 extends UUIDBuilder
{
    private string $output;
    protected function __construct(
        private readonly string $namespace,
        private readonly string $name)
    {
        parent::__construct(5);

        $this->registerProvider(
            ProviderKey::Hash,
            $this->namespace,
            $this->name,
            5
        );

        $this->registerField(
            FieldKey::HASH_TIME_LO,
            ProviderKey::Hash
        )
            ->length(8);

        $this->registerField(
            FieldKey::HASH_TIME_MID,
            ProviderKey::Hash
        )
            ->length(4)
            ->startAt(8);

        $this->registerField(
            FieldKey::HASH_TIME_HI,
            ProviderKey::Hash
        )
            ->length(4)
            ->startAt(12)
            ->applyVersion(5);

        $this->registerField(
            FieldKey::HASH_VAR,
            ProviderKey::Hash
        )
            ->length(4)
            ->startAt(16)
            ->applyVariant();

            $this->registerField(
                FieldKey::HASH_NODE,
                ProviderKey::Hash
            )
                ->length(12)
                ->startAt(20);
    }

    public function __toString(): string
    {
        //the UUID product is static
        //cache it for subsequent calls
        return $this->output ??= parent::__toString(); // TODO: Change the autogenerated stub
    }

}